var _user$project$Page_FlashCard$cards = function (list) {
	return A2(
		_elm_lang$core$List$map,
		function (x) {
			return A2(
				_user$project$Views_Page$menuOption,
				x.contentEn,
				{
					ctor: '::',
					_0: _user$project$Route$href(
						_user$project$Route$EditFlashCard(x.cardId)),
					_1: {ctor: '[]'}
				});
		},
		list);
};
var _user$project$Page_FlashCard$emptyCard = {cardId: 0, contentEn: '', contentJpKanji: '', contentJp: '', contextEn: '', contextJP: '', property: ''};
var _user$project$Page_FlashCard$initialModel = {
	cards: {ctor: '[]'},
	newCard: _elm_lang$core$Maybe$Nothing,
	successPostPost: _elm_lang$core$Maybe$Nothing,
	successEdit: _elm_lang$core$Maybe$Nothing,
	listView: false,
	editView: false,
	added_edited: ''
};
var _user$project$Page_FlashCard$init = F2(
	function (session, listview) {
		var handleLoadError = F2(
			function (message, msg) {
				return A2(_user$project$Page_Errored$pageLoadError, _user$project$Views_Page$FlashCard, message);
			});
		var toModel = function (cardList) {
			return _elm_lang$core$Native_Utils.update(
				_user$project$Page_FlashCard$initialModel,
				{cards: cardList, listView: listview});
		};
		var token = A2(
			_elm_lang$core$Maybe$withDefault,
			_user$project$Data_Session$Token(''),
			session.token);
		var loadAnki = _elm_lang$http$Http$toTask(
			_user$project$Data_AnkiCard$getAnkis(token));
		var d = A2(_elm_lang$core$Debug$log, 'session', session);
		var _p0 = session.token;
		if (_p0.ctor === 'Nothing') {
			return A2(
				_elm_lang$core$Task$mapError,
				handleLoadError('Please Sign In.'),
				A2(
					_elm_lang$core$Task$map,
					toModel,
					_elm_lang$core$Task$fail(_user$project$Page_FlashCard$initialModel)));
		} else {
			return A2(
				_elm_lang$core$Task$mapError,
				handleLoadError('FlashCard is currently unavailable.'),
				A2(_elm_lang$core$Task$map, toModel, loadAnki));
		}
	});
var _user$project$Page_FlashCard$initCardList = _elm_lang$core$Native_Utils.update(
	_user$project$Page_FlashCard$initialModel,
	{listView: true});
var _user$project$Page_FlashCard$initEditCard = F2(
	function (session, cardId) {
		var handleLoadError = F2(
			function (message, msg) {
				return A2(_user$project$Page_Errored$pageLoadError, _user$project$Views_Page$FlashCard, message);
			});
		var toModel = function (card) {
			return _elm_lang$core$Native_Utils.update(
				_user$project$Page_FlashCard$initialModel,
				{newCard: card, editView: true});
		};
		var token = A2(
			_elm_lang$core$Maybe$withDefault,
			_user$project$Data_Session$Token(''),
			session.token);
		var loadAnki = _elm_lang$http$Http$toTask(
			A2(_user$project$Data_AnkiCard$getAnkiByCardId, token, cardId));
		var _p1 = session.token;
		if (_p1.ctor === 'Nothing') {
			return A2(
				_elm_lang$core$Task$mapError,
				handleLoadError('Please Sign In.'),
				A2(
					_elm_lang$core$Task$map,
					toModel,
					_elm_lang$core$Task$fail(_user$project$Page_FlashCard$initialModel)));
		} else {
			return A2(
				_elm_lang$core$Task$mapError,
				handleLoadError('FlashCard is currently unavailable.'),
				A2(_elm_lang$core$Task$map, toModel, loadAnki));
		}
	});
var _user$project$Page_FlashCard$initNewCard = function () {
	var card = _user$project$Page_FlashCard$emptyCard;
	return _elm_lang$core$Native_Utils.update(
		_user$project$Page_FlashCard$initialModel,
		{
			newCard: _elm_lang$core$Maybe$Just(card)
		});
}();
var _user$project$Page_FlashCard$_p2 = _rtfeldman$elm_css_helpers$Html_CssHelpers$withNamespace('dreamwriter');
var _user$project$Page_FlashCard$id = _user$project$Page_FlashCard$_p2.id;
var _user$project$Page_FlashCard$class = _user$project$Page_FlashCard$_p2.$class;
var _user$project$Page_FlashCard$classList = _user$project$Page_FlashCard$_p2.classList;
var _user$project$Page_FlashCard$listView = F2(
	function (session, model) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _user$project$Page_FlashCard$class(
					{
						ctor: '::',
						_0: _user$project$Styling_MyCss$MenuContainer,
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			},
			_user$project$Page_FlashCard$cards(model.cards));
	});
var _user$project$Page_FlashCard$Model = F7(
	function (a, b, c, d, e, f, g) {
		return {cards: a, newCard: b, successPostPost: c, successEdit: d, listView: e, editView: f, added_edited: g};
	});
var _user$project$Page_FlashCard$SetSuccessEdit = function (a) {
	return {ctor: 'SetSuccessEdit', _0: a};
};
var _user$project$Page_FlashCard$SetSuccessPost = function (a) {
	return {ctor: 'SetSuccessPost', _0: a};
};
var _user$project$Page_FlashCard$update = F3(
	function (session, msg, model) {
		var card = function () {
			var _p3 = model.newCard;
			if (_p3.ctor === 'Just') {
				return _p3._0;
			} else {
				return _user$project$Page_FlashCard$emptyCard;
			}
		}();
		var token = A2(
			_elm_lang$core$Maybe$withDefault,
			_user$project$Data_Session$Token(''),
			session.token);
		var _p4 = msg;
		switch (_p4.ctor) {
			case 'NoOp':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					model,
					{ctor: '[]'});
			case 'SetContentEn':
				var c = _elm_lang$core$Native_Utils.update(
					card,
					{contentEn: _p4._0});
				var newModel = _elm_lang$core$Native_Utils.update(
					model,
					{
						newCard: _elm_lang$core$Maybe$Just(c)
					});
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					newModel,
					{ctor: '[]'});
			case 'SetContentKanji':
				var c = _elm_lang$core$Native_Utils.update(
					card,
					{contentJpKanji: _p4._0});
				var newModel = _elm_lang$core$Native_Utils.update(
					model,
					{
						newCard: _elm_lang$core$Maybe$Just(c)
					});
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					newModel,
					{ctor: '[]'});
			case 'SetContentHirag':
				var c = _elm_lang$core$Native_Utils.update(
					card,
					{contentJp: _p4._0});
				var newModel = _elm_lang$core$Native_Utils.update(
					model,
					{
						newCard: _elm_lang$core$Maybe$Just(c)
					});
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					newModel,
					{ctor: '[]'});
			case 'SetContextEn':
				var c = _elm_lang$core$Native_Utils.update(
					card,
					{contextEn: _p4._0});
				var newModel = _elm_lang$core$Native_Utils.update(
					model,
					{
						newCard: _elm_lang$core$Maybe$Just(c)
					});
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					newModel,
					{ctor: '[]'});
			case 'SetContextJp':
				var c = _elm_lang$core$Native_Utils.update(
					card,
					{contextJP: _p4._0});
				var newModel = _elm_lang$core$Native_Utils.update(
					model,
					{
						newCard: _elm_lang$core$Maybe$Just(c)
					});
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					newModel,
					{ctor: '[]'});
			case 'SetProperty':
				var c = _elm_lang$core$Native_Utils.update(
					card,
					{property: _p4._0});
				var newModel = _elm_lang$core$Native_Utils.update(
					model,
					{
						newCard: _elm_lang$core$Maybe$Just(c)
					});
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					newModel,
					{ctor: '[]'});
			case 'SubmitNewAnki':
				var p = A2(
					_elm_lang$http$Http$send,
					_user$project$Page_FlashCard$SetSuccessPost,
					A2(
						_user$project$Data_AnkiCard$postAnkis,
						token,
						A2(_elm_lang$core$Maybe$withDefault, _user$project$Page_FlashCard$emptyCard, model.newCard)));
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{added_edited: 'Anki successfully added!'}),
					{
						ctor: '::',
						_0: p,
						_1: {ctor: '[]'}
					});
			case 'UpdateAnki':
				var _p5 = model.newCard;
				if (_p5.ctor === 'Just') {
					var _p6 = _p5._0;
					var p = A2(
						_elm_lang$http$Http$send,
						_user$project$Page_FlashCard$SetSuccessEdit,
						A3(_user$project$Data_AnkiCard$putAnkiByCardId, token, _p6.cardId, _p6));
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						model,
						{
							ctor: '::',
							_0: p,
							_1: {ctor: '[]'}
						});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						model,
						{ctor: '[]'});
				}
			case 'SetSuccessEdit':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							successEdit: _elm_lang$core$Maybe$Just(_p4._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							successPostPost: _elm_lang$core$Maybe$Just(_p4._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Page_FlashCard$SetProperty = function (a) {
	return {ctor: 'SetProperty', _0: a};
};
var _user$project$Page_FlashCard$SetContextJp = function (a) {
	return {ctor: 'SetContextJp', _0: a};
};
var _user$project$Page_FlashCard$SetContextEn = function (a) {
	return {ctor: 'SetContextEn', _0: a};
};
var _user$project$Page_FlashCard$SetContentHirag = function (a) {
	return {ctor: 'SetContentHirag', _0: a};
};
var _user$project$Page_FlashCard$SetContentKanji = function (a) {
	return {ctor: 'SetContentKanji', _0: a};
};
var _user$project$Page_FlashCard$SetContentEn = function (a) {
	return {ctor: 'SetContentEn', _0: a};
};
var _user$project$Page_FlashCard$newCardForm = F3(
	function (card, submiter, result) {
		return A2(
			_elm_lang$html$Html$form,
			{
				ctor: '::',
				_0: _user$project$Page_FlashCard$class(
					{
						ctor: '::',
						_0: _user$project$Styling_MyCss$FormControl,
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h3,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(result),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _user$project$Views_Form$input(
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$placeholder('English Anki'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$Page_FlashCard$SetContentEn),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$value(card.contentEn),
									_1: {ctor: '[]'}
								}
							}
						}),
					_1: {
						ctor: '::',
						_0: _user$project$Views_Form$input(
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$placeholder('Kanji Anki'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(_user$project$Page_FlashCard$SetContentKanji),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$value(card.contentJpKanji),
										_1: {ctor: '[]'}
									}
								}
							}),
						_1: {
							ctor: '::',
							_0: _user$project$Views_Form$input(
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$placeholder('Hiragana Anki'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Page_FlashCard$SetContentHirag),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$value(card.contentJp),
											_1: {ctor: '[]'}
										}
									}
								}),
							_1: {
								ctor: '::',
								_0: _user$project$Views_Form$textarea(
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$placeholder('Anki English Context'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onInput(_user$project$Page_FlashCard$SetContextEn),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$value(card.contextEn),
												_1: {ctor: '[]'}
											}
										}
									}),
								_1: {
									ctor: '::',
									_0: _user$project$Views_Form$textarea(
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$placeholder('Anki Japanese Context'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onInput(_user$project$Page_FlashCard$SetContextJp),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$value(card.contextJP),
													_1: {ctor: '[]'}
												}
											}
										}),
									_1: {
										ctor: '::',
										_0: _user$project$Views_Form$input(
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$placeholder('Anki Property'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onInput(_user$project$Page_FlashCard$SetProperty),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$value(card.property),
														_1: {ctor: '[]'}
													}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_user$project$Views_Form$submit,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onClick(submiter),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$disabled(true),
														_1: {ctor: '[]'}
													}
												},
												'Add Anki'),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				}
			});
	});
var _user$project$Page_FlashCard$UpdateAnki = {ctor: 'UpdateAnki'};
var _user$project$Page_FlashCard$SubmitNewAnki = {ctor: 'SubmitNewAnki'};
var _user$project$Page_FlashCard$view = F2(
	function (session, model) {
		var d = A2(_elm_lang$core$Debug$log, 'check: ', model);
		if (model.listView) {
			return A2(_user$project$Page_FlashCard$listView, session, model);
		} else {
			var _p7 = model.newCard;
			if (_p7.ctor === 'Nothing') {
				return A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _user$project$Page_FlashCard$class(
							{
								ctor: '::',
								_0: _user$project$Styling_MyCss$MenuContainer,
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _user$project$Views_Page$arrowLeftBtn,
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _user$project$Page_FlashCard$class(
										{
											ctor: '::',
											_0: _user$project$Styling_MyCss$MenuContainerCol,
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_user$project$Views_Page$flashCard,
										_elm_lang$core$List$head(model.cards),
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(
											_user$project$Views_Page$timerField,
											'0:30',
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: _user$project$Views_Page$rowContainer(
												{
													ctor: '::',
													_0: A2(
														_user$project$Views_Page$flashCardBtn,
														'Option 1',
														{ctor: '[]'}),
													_1: {
														ctor: '::',
														_0: A2(
															_user$project$Views_Page$flashCardBtn,
															'Option 2',
															{ctor: '[]'}),
														_1: {
															ctor: '::',
															_0: A2(
																_user$project$Views_Page$flashCardBtn,
																'Option 3',
																{ctor: '[]'}),
															_1: {
																ctor: '::',
																_0: A2(
																	_user$project$Views_Page$flashCardBtn,
																	'Option 4',
																	{ctor: '[]'}),
																_1: {ctor: '[]'}
															}
														}
													}
												}),
											_1: {ctor: '[]'}
										}
									}
								}),
							_1: {
								ctor: '::',
								_0: _user$project$Views_Page$arrowRightBtn,
								_1: {ctor: '[]'}
							}
						}
					});
			} else {
				return A3(
					_user$project$Page_FlashCard$newCardForm,
					_p7._0,
					model.editView ? _user$project$Page_FlashCard$UpdateAnki : _user$project$Page_FlashCard$SubmitNewAnki,
					model.added_edited);
			}
		}
	});
var _user$project$Page_FlashCard$NoOp = {ctor: 'NoOp'};
